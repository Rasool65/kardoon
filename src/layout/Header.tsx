import SelectCity from '../pages/city/SelectCity';
import { useSelector } from 'react-redux';
import { RootStateType } from '@src/redux/Store';

const Header = ({ headerTitle }: any) => {
  const userData = useSelector((state: RootStateType) => state.authentication.userData);

  // function checkRole(normalizedName: string) {
  //   return userData?.roles ? userData?.roles.some((roleName) => roleName.normalizedName === normalizedName) : false;
  // }
  return (
    <>
      <div className="row menu-bar" style={{ padding: '0 20px 0 20px', marginTop: '15px', position: 'relative', zIndex: '1' }}>
        <div data-menu="menu-main" style={{ cursor: 'pointer' }} className="col-8 d-flex">
          <div className="menu-icon" style={{ padding: '0 0 0 0', textAlign: 'center', width: '30px' }}>
            <img
              className=""
              src={require('/src/scss/images/menu-b.png')}
              style={{ width: '20px', height: '20px', cursor: 'pointer' }}
              alt=""
            />
          </div>
          <div
            className="col-5 menu-title"
            style={{
              padding: '0 0px 0 0',
              color: 'white',
              fontSize: '15px',
              textAlign: 'right',
            }}
          >
            
            <svg width="78" height="20" viewBox="0 0 78 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0_699_3888)">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M74.6909 1.84961H75.9455L74.0364 4.57618C76.3858 5.46789 78.0263 7.81504 77.8074 10.4854C77.5581 13.5219 74.9111 15.8188 71.8322 15.8188H67.2446L68.792 13.6117H72.9815C73.3057 13.6117 73.6069 13.4405 73.7691 13.1617L75.3466 10.4566C75.5087 10.1789 75.5087 9.83663 75.3466 9.55894L73.7691 6.85391C73.6069 6.57503 73.3069 6.40387 72.9815 6.40387H69.4283L70.355 5.08487L71.445 3.53726C72.2 2.44807 73.3517 1.84961 74.6909 1.84961Z" fill="#CC0041"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M66.4494 9.01462L66.7881 9.59034C66.9466 9.85845 66.9466 10.1661 66.7881 10.4282L66.4494 11.0099C66.297 11.272 66.0308 11.4288 65.715 11.4288H65.0424C64.7315 11.4288 64.4665 11.272 64.3081 11.0099L63.9693 10.4282C63.8169 10.1661 63.8169 9.85845 63.9693 9.59034L64.3081 9.01462C64.4665 8.74651 64.7315 8.5957 65.0424 8.5957H65.715C66.032 8.5957 66.297 8.74651 66.4494 9.01462Z" fill="#CC0041"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M66.822 13.6134L65.8397 15.0162L64.8174 16.4776C64.077 17.5357 62.86 18.1677 61.5594 18.1677H60.3049L62.3265 15.2843C60.2008 14.3124 58.76 12.1173 58.9221 9.62767C59.1229 6.5516 61.7845 4.19727 64.9009 4.19727H69.0711L67.5177 6.40438H63.7734C63.4443 6.40438 63.1406 6.57793 62.9773 6.85921L61.407 9.55346C61.2425 9.83474 61.2425 10.1818 61.407 10.4631L62.9773 13.1574C63.1419 13.4387 63.4455 13.6134 63.7746 13.6134H66.822V13.6134Z" fill="#CC0041"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M50.343 5.23486C51.387 5.44313 52.3452 5.95541 53.1073 6.70228C54.1054 7.69572 54.6765 9.02071 54.6765 10.4247C54.6765 11.8275 54.1054 13.1525 53.1073 14.1399C52.0766 15.1597 50.6974 15.7246 49.2469 15.7246H46.641C45.1904 15.7246 43.8052 15.1597 42.7805 14.1399C41.7824 13.1525 41.2114 11.8275 41.2114 10.4247V5.12475C41.2114 4.12413 42.0389 3.30544 43.0503 3.30544H43.9952V10.4247C43.9952 11.1452 44.277 11.8347 44.7961 12.3469C45.2884 12.8341 45.9454 13.113 46.641 13.113H49.2469C49.9425 13.113 50.5994 12.8341 51.0918 12.3469C51.6108 11.8335 51.8927 11.1452 51.8927 10.4247C51.8927 8.96924 50.7301 7.73522 49.2469 7.72924L47.1987 7.72325H45.0586L47.5737 4.15764C48.0274 3.3593 48.3952 2.75485 48.867 2.39099C49.4187 1.95532 49.957 1.83203 51.0204 1.83203H52.7674L50.343 5.23486Z" fill="#6A6D73"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M19.5052 18.169H22.0397C22.6627 18.169 23.2083 17.8829 23.5628 17.3694L25.8735 13.9858C26.6877 13.0438 27.1801 11.8229 27.1801 10.4908C27.1801 7.52841 24.7581 5.125 21.7638 5.125C18.7696 5.125 16.3403 7.52841 16.3403 10.4908C16.3403 13.2317 18.4284 15.4987 21.113 15.8111L19.5052 18.169ZM21.7638 7.82165C23.2543 7.82165 24.4617 9.01737 24.4617 10.4908C24.4617 11.9654 23.2543 13.1611 21.7638 13.1611C20.2734 13.1611 19.066 11.9654 19.066 10.4908C19.0648 9.01737 20.2734 7.82165 21.7638 7.82165Z" fill="#6A6D73"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M1.51514 10.4249C1.51514 11.8277 2.08616 13.1527 3.08424 14.1402C4.11499 15.1599 5.49415 15.7249 6.9447 15.7249H12.3803H15.0987V5.125H14.2192C13.2078 5.125 12.3803 5.94369 12.3803 6.94431V13.1144H6.9447C6.24907 13.1144 5.59215 12.8355 5.09976 12.3484C4.58076 11.8349 4.29888 11.1467 4.29888 10.4261V10.4202C4.29888 9.69243 4.58802 9.0042 5.09976 8.49073C5.59215 8.00957 6.24907 7.73068 6.9447 7.73068V7.43146C6.82614 6.47033 6.15712 5.98917 5.36954 5.89821C2.97294 5.63129 1.51514 8.39258 1.51514 10.419V10.4249Z" fill="#6A6D73"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M34.4997 15.5556C35.1954 15.5556 35.8523 15.2767 36.3447 14.7955C36.8564 14.282 37.1456 13.5938 37.1456 12.8661V9.39743C37.1456 8.91029 37.3101 8.43631 37.6307 8.11075C37.9658 7.76604 38.3723 7.57812 38.884 7.57812H39.9281V12.8649C39.9281 14.8913 38.4703 17.6526 36.0737 17.3857C35.2861 17.2947 34.6159 16.8135 34.4985 15.8524V15.5556H34.4997Z" fill="#6A6D73"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M30.5866 5.12451C31.9525 5.18316 33.2458 5.74212 34.2172 6.70324C35.2153 7.69668 35.7863 9.02167 35.7863 10.4257C35.7863 11.8284 35.2153 13.1534 34.2172 14.1409C33.1865 15.1606 31.8073 15.7256 30.3568 15.7256H26.1685L27.4811 13.8871C27.8356 13.3868 28.3679 13.1139 28.9849 13.1139H30.3568C31.0524 13.1139 31.7093 12.835 32.2017 12.3479C32.7207 11.8344 33.0026 11.1462 33.0026 10.4257C33.0026 9.69793 32.7207 9.0097 32.2017 8.49622C31.7093 8.01506 31.0524 7.73019 30.3568 7.73019H28.934C28.934 7.73019 28.8808 7.67155 28.8167 7.51954C28.7695 7.40703 28.6885 7.12815 28.6836 6.92228C28.6788 6.68888 28.726 6.46865 28.7574 6.37289C28.8482 6.09641 29.0066 5.84864 29.2341 5.632C29.6152 5.27412 30.0688 5.10536 30.5866 5.12451Z" fill="#6A6D73"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M72.4705 9.01462L72.8032 9.59034C72.9617 9.85845 72.9617 10.1661 72.8032 10.4282L72.4705 11.0099C72.312 11.272 72.0471 11.4288 71.7362 11.4288H71.0587C70.7478 11.4288 70.4828 11.272 70.3243 11.0099L69.9904 10.4282C69.832 10.1661 69.832 9.85845 69.9904 9.59034L70.3243 9.01462C70.4828 8.74651 70.7478 8.5957 71.0587 8.5957H71.7362C72.0471 8.5957 72.312 8.74651 72.4705 9.01462Z" fill="#CC0041"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M10.7539 5.53597L11.0164 5.98362C11.193 6.29601 11.193 6.64551 11.0164 6.95791L10.7539 7.40555C10.57 7.71675 10.2615 7.8927 9.90096 7.8927H9.37591C9.01539 7.8927 8.69963 7.71675 8.523 7.40555L8.26048 6.95791C8.07659 6.64551 8.07659 6.29601 8.26048 5.98362L8.523 5.53597C8.70084 5.22358 9.01539 5.04883 9.37591 5.04883H9.90096C10.2615 5.04883 10.57 5.22358 10.7539 5.53597Z" fill="#6A6D73"/>
              </g>
              <defs>
              <clipPath id="clip0_699_3888">
              <rect width="77" height="19" fill="white" transform="translate(0.752441 0.5)"/>
              </clipPath>
              </defs>
            </svg>

            {/* {headerTitle} */}
          </div>
        </div>

        <div className="col-4" style={{ padding: '0 0 0 0', textAlign: 'right' }}>
          {/* <span style={{ marginLeft: '10px', color: '#FFF' }}>شهر</span> */}
          <SelectCity />
        </div>
      </div>

      <div className="card header-card shape-rounded" data-card-height="150">
        <div className="card-overlay bg-highlight opacity-95" />
        <div className="card-overlay dark-mode-tint" />
        <div className="card-bg bg-20" />
      </div>
    </>
  );
};
export default Header;
